// app/dashboard/prescriptions/[id]/page.tsx
import { getPrescriptionById } from "@/lib/actions/prescriptions.actions";
import { Badge } from "@/components/ui/badge";
import Link from "next/link";
import { Button } from "@/components/ui/button";
import { DeletePrescriptionButton } from "./DeletePrescriptionButton";
import { MedicationDetailItem } from "@/components/prescriptions/MedicationDetailItem";

// Define the type for a single medication item within a prescription.
// It's good practice to define this in a shared types file (e.g., lib/database.types.ts
// if generated by Supabase, or a custom types file).
interface PrescriptionMedicine {
  id: string;
  medicine_name: string;
  dosage: string;
  frequency_hours: number | null;
  duration: number | null;
  instructions: string | null;
  // Add any other fields that are part of your 'prescription_medicines' table
  // and are used in MedicationDetailItem or elsewhere.
}

export default async function PrescriptionDetailPage({ params }: { params: { id: string } }) {
    const { data: prescription, error } = await getPrescriptionById(params.id);

    if (error || !prescription) {
        return (
            <div className="container mx-auto p-4 text-center">
                <h1 className="text-2xl font-bold text-red-500">Error</h1>
                <p>{error || "No se ha encontrado la receta."}</p>
                <Button asChild variant="link" className="mt-4">
                    <Link href="/dashboard/prescriptions">Volver a mis recetas</Link>
                </Button>
            </div>
        );
    }
    
    return (
        <div className="container mx-auto p-4 max-w-4xl">
            <div className="flex justify-between items-center mb-6">
                <Button asChild variant="outline" size="sm">
                   <Link href="/dashboard/prescriptions">← Volver a la lista</Link>
                </Button>
                <DeletePrescriptionButton prescriptionId={prescription.id} />
            </div>

            <div className="p-6 border rounded-lg bg-card text-card-foreground">
                <h1 className="text-3xl font-bold mb-2">{prescription.diagnosis}</h1>
                <p className="text-lg text-muted-foreground mb-4">
                    Recetado por: <strong>{prescription.doctor_name || 'No especificado'}</strong>
                </p>

                <div className="flex flex-wrap gap-4 mb-6">
                    <Badge variant="secondary">Inicio: {new Date(prescription.start_date).toLocaleDateString()}</Badge>
                    {prescription.end_date && (<Badge variant="secondary">Fin: {new Date(prescription.end_date).toLocaleDateString()}</Badge>)}
                </div>

                {prescription.notes && (
                    <div className="mb-6">
                        <h2 className="text-xl font-semibold mb-2">Notas del Médico</h2>
                        <p className="text-muted-foreground whitespace-pre-wrap">{prescription.notes}</p>
                    </div>
                )}
                
                <div className="mb-6">
                    <h2 className="text-xl font-semibold mb-3">Medicamentos Recetados</h2>
                    <div className="space-y-4">
                        {/* Ensure prescription.prescription_medicines is an array and safe to map */}
                        {prescription.prescription_medicines && prescription.prescription_medicines.length > 0 ? (
                            prescription.prescription_medicines.map((med: PrescriptionMedicine) => ( // Applied type here
                                <MedicationDetailItem key={med.id} med={med} />
                            ))
                        ) : (
                            <p className="text-muted-foreground">No hay medicamentos especificados para esta receta.</p>
                        )}
                    </div>
                </div>

                {prescription.attachment_url && (
                    <div className="mt-6">
                        <Button asChild><a href={prescription.attachment_url} target="_blank" rel="noopener noreferrer">Ver Receta Adjunta</a></Button>
                    </div>
                )}
            </div>
        </div>
    );
}